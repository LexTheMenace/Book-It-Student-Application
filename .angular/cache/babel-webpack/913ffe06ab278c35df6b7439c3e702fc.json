{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Book } from 'src/app/shared/book/Book.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../bookshelf.service\";\nimport * as i3 from \"@angular/forms\";\nexport let BookEditComponent = /*#__PURE__*/(() => {\n  class BookEditComponent {\n    constructor(route, bookshelfService, router) {\n      this.route = route;\n      this.bookshelfService = bookshelfService;\n      this.router = router;\n      this.isEditMode = false;\n    } // initialize a property set to form group create a method called initForm [x]\n    // create submit method [x]\n    // cancel method []\n\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        if (params['id']) {\n          this.isEditMode = true; // '0' -> 0\n\n          this.id = +params['id'];\n        }\n      });\n      this.initForm();\n      console.log(this.bookForm);\n    }\n\n    initForm() {\n      // editmode = false, i want to keep the values from the form empty\n      let myBook = new Book(\"\", \"\", \"\", \"\", 0);\n\n      if (this.isEditMode) {\n        let book = this.bookshelfService.getBookByIndex(this.id);\n        myBook = book;\n      } // <!-- title, author, price, genre, coverImagePath -->\n\n\n      this.bookForm = new FormGroup({\n        title: new FormControl(myBook.title, [Validators.required]),\n        author: new FormControl(myBook.author, [Validators.required]),\n        genre: new FormControl(myBook.genre, [Validators.required]),\n        price: new FormControl(myBook.price, [Validators.required]),\n        coverImagePath: new FormControl(myBook.coverImagePath, [Validators.required])\n      });\n    }\n\n    onSubmit() {\n      // editmode = true -> udpate the book in the bookshelf service\n      // editmode = false -> add the book to myBooks in booksheld Service\n      if (this.isEditMode) {\n        this.bookshelfService.updateBook(this.bookForm.value, this.id);\n      } else {\n        this.bookshelfService.addBook(this.bookForm.value);\n      }\n    }\n\n    onCancel() {\n      this.router.navigate(['/bookshelf']);\n    }\n\n  }\n\n  BookEditComponent.ɵfac = function BookEditComponent_Factory(t) {\n    return new (t || BookEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BookshelfService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  BookEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookEditComponent,\n    selectors: [[\"app-book-edit\"]],\n    decls: 31,\n    vars: 4,\n    consts: [[1, \"form-group\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"title\", \"name\", \"title\", \"type\", \"text\", \"formControlName\", \"title\", 1, \"form-control\"], [\"id\", \"author\", \"name\", \"author\", \"type\", \"text\", \"formControlName\", \"author\", 1, \"form-control\"], [\"id\", \"price\", \"name\", \"price\", \"type\", \"number\", \"formControlName\", \"price\", 1, \"form-control\"], [\"formControlName\", \"genre\", 1, \"form-control\"], [\"value\", \"Mystery\"], [\"value\", \"Science\"], [\"value\", \"Fiction\"], [\"value\", \"Non-fiction\"], [\"id\", \"coverImagePath\", \"name\", \"coverImagePath\", \"type\", \"text\", \"formControlName\", \"coverImagePath\", 1, \"form-control\"], [2, \"margin-top\", \"10px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-5\", 3, \"disabled\"], [1, \"btn\", \"btn-light\", 3, \"click\"]],\n    template: function BookEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function BookEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵtext(4, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 1);\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"Author:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10, \"Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 3);\n        i0.ɵɵelementStart(12, \"label\");\n        i0.ɵɵtext(13, \"Genre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 4);\n        i0.ɵɵelementStart(15, \"option\", 5);\n        i0.ɵɵtext(16, \"Mystery\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 6);\n        i0.ɵɵtext(18, \"Science\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 7);\n        i0.ɵɵtext(20, \"Fiction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 8);\n        i0.ɵɵtext(22, \"Non-Fction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"label\");\n        i0.ɵɵtext(24, \"coverImagePath:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 9);\n        i0.ɵɵelementStart(26, \"div\", 10);\n        i0.ɵɵelementStart(27, \"button\", 11);\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function BookEditComponent_Template_button_click_29_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(30, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Book\" : \"Add new book\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.bookForm);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"disabled\", ctx.bookForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Save Book\" : \"Add new book\", \" \");\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1x solid red}select.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return BookEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}