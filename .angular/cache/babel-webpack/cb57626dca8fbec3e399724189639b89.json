{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Book } from '../shared/book/Book.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LibraryService = /*#__PURE__*/(() => {\n  class LibraryService {\n    constructor(http) {\n      this.http = http;\n      this.myBooks = [];\n      this.loadingSub = new BehaviorSubject(false);\n      this.bookSub = new BehaviorSubject([]);\n    }\n\n    fetchBooks(query) {\n      this.loadingSub.next(true);\n      this.bookSub.next([]);\n      const formattedQuery = query.split(' ').join('+');\n      this.http.get(`https://openlibrary.org/search.json?q=${formattedQuery}`).pipe(map(responseData => {\n        const books = [];\n        responseData.docs.map(book => {\n          const {\n            author_name,\n            title,\n            isbn,\n            first_publishing_year\n          } = book;\n          const newBook = new Book(title, author_name ? author_name[0] : '', '', '', 0, first_publishing_year, isbn ? isbn[0] : '');\n          books.push(newBook);\n        });\n        return books;\n      })).subscribe(books => {\n        this.bookSub.next(books);\n        this.loadingSub.next(false);\n      });\n    }\n\n  }\n\n  LibraryService.ɵfac = function LibraryService_Factory(t) {\n    return new (t || LibraryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LibraryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibraryService,\n    factory: LibraryService.ɵfac,\n    providedIn: 'root'\n  });\n  return LibraryService;\n})();","map":null,"metadata":{},"sourceType":"module"}