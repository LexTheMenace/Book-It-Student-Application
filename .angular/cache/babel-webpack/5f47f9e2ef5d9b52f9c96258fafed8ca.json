{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction AuthComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\n\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.isLoginMode = true;\n      this.error = null;\n      this.isAuthenticated = false;\n    }\n\n    ngOnInit() {}\n\n    toggleMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n\n    onSubmit(form) {\n      const {\n        email,\n        password\n      } = form.value;\n      let authObs;\n\n      if (!this.isLoginMode) {\n        // Sign Up;\n        authObs = this.authService.signUp(email, password);\n      } else {\n        // Sign In\n        authObs = this.authService.signIn(email, password);\n      }\n\n      authObs.subscribe(authData => {\n        this.router.navigate(['/bookshelf']);\n      }, error => {\n        this.error = 'An Error Occurred';\n        setTimeout(() => {\n          this.error = null;\n        }, 5000);\n      });\n      form.reset();\n    }\n\n  }\n\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"offset-md-3\"], [\"class\", \"alert alert-danger \", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"ngModel\", \"\", \"autocomplete\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"autocomplete\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, AuthComponent_div_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r1 = i0.ɵɵreference(4);\n\n          return ctx.onSubmit(_r1);\n        });\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"label\", 6);\n        i0.ɵɵtext(7, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" | \");\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_16_listener() {\n          return ctx.toggleMode();\n        });\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(4);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", _r1.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Sign In\" : \"Sign Up\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Switch to \", ctx.isLoginMode ? \"Sign Up\" : \"Sign In\", \"\");\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i4.EmailValidator, i4.MinLengthValidator],\n    styles: [\"\"]\n  });\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}